import os
import json

def merge_data(yolo_folder, skeleton_file, output_folder):
    # Read Skeleton data
    with open(skeleton_file, 'r') as f:
        skeleton_data = json.load(f)

    # Create output folder if it doesn't exist
    os.makedirs(output_folder, exist_ok=True)

    # Merge data
    for yolo_filename in os.listdir(yolo_folder):
        if yolo_filename.endswith('.txt'):
            yolo_filepath = os.path.join(yolo_folder, yolo_filename)
            
            with open(yolo_filepath, 'r') as f:
                yolo_values = [line.strip() for line in f.readlines()]

            image_name = os.path.splitext(yolo_filename)[0]
            skeleton_annotation = next((anno for anno in skeleton_data['annotations'] if anno['image_path'] == image_name), None)

            if skeleton_annotation:
                bbox_list = [list(map(float, values.split(' ')[1:])) for values in yolo_values]
                
                merged_annotation = {
                    "image_path": image_name,
                    "annotations": [
                        {
                            "category": "object",  # Modify as needed
                            "bbox": bbox,
                            "skeleton": skeleton_annotation["skeleton"]
                        } for bbox in bbox_list
                    ]
                }

                # Save merged data
                output_filepath = os.path.join(output_folder, f'{image_name}_merged.json')
                with open(output_filepath, 'w') as output_file:
                    json.dump(merged_annotation, output_file, indent=2)

# Usage
merge_data('yolo_annotations_folder', 'skeleton_annotations.json', 'merged_data_folder')
